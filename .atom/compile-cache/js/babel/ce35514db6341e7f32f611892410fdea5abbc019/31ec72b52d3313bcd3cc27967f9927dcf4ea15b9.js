function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint-env jasmine */

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

'use babel';

describe('go-config', function () {
  var goconfigMain = null;

  beforeEach(function () {
    waitsForPromise(function () {
      return atom.packages.activatePackage('environment');
    });
    waitsForPromise(function () {
      return atom.packages.activatePackage('go-config').then(function (pack) {
        goconfigMain = pack.mainModule;
      });
    });
    waitsFor(function () {
      return goconfigMain.ready();
    });
  });

  describe('when the go-config package is activated', function () {
    it('manages subscriptions', function () {
      expect(goconfigMain).toBeDefined();
      expect(goconfigMain.subscriptions).toBeDefined();
      expect(goconfigMain.subscriptions).toBeTruthy();
    });

    it('disposes correctly', function () {
      expect(goconfigMain).toBeDefined();
      expect(goconfigMain.subscriptions).toBeDefined();
      expect(goconfigMain.subscriptions).toBeTruthy();
      expect(goconfigMain.environment).toBeDefined();
      expect(goconfigMain.environment).toBeTruthy();
      goconfigMain.getLocator();
      expect(goconfigMain.locator).toBeDefined();
      expect(goconfigMain.locator).toBeTruthy();

      goconfigMain.dispose();
      expect(goconfigMain.subscriptions).toBeFalsy();
      expect(goconfigMain.environment).toBeFalsy();
      expect(goconfigMain.locator).toBeFalsy();

      goconfigMain.activate();
    });

    it('gets a Locator', function () {
      expect(goconfigMain.getLocator).toBeDefined();
      var locator = goconfigMain.getLocator();
      expect(locator).toBeDefined();
      expect(locator).toBeTruthy();
    });

    it('gets an executor', function () {
      expect(goconfigMain.getExecutor).toBeDefined();
      var executor = goconfigMain.getExecutor();
      expect(executor).toBeDefined();
      expect(executor).toBeTruthy();
    });

    it('is ready', function () {
      expect(goconfigMain.ready).toBeDefined();
      expect(goconfigMain.ready()).toBe(true);
    });

    it('provides a service', function () {
      expect(goconfigMain.provide).toBeDefined();
      var provider = goconfigMain.provide();
      expect(provider).toBeTruthy();
      expect(provider.executor).toBeTruthy();
      expect(provider.locator).toBeTruthy();
      expect(provider.locator.runtimes).toBeDefined();
      expect(provider.locator.runtime).toBeDefined();
      expect(provider.locator.gopath).toBeDefined();
      expect(provider.locator.findTool).toBeDefined();
      expect(provider.locator.runtimeCandidates).not.toBeDefined();
      expect(provider.environment).toBeDefined();
      expect(provider.environment()).toBeTruthy();
    });
  });

  describe('when the environment is not available', function () {
    var e = null;
    beforeEach(function () {
      e = goconfigMain.environment;
      goconfigMain.environment = null;
    });
    afterEach(function () {
      goconfigMain.environment = e;
    });

    it('is not ready for Atom < 1.7.0', function () {
      expect(goconfigMain.ready).toBeDefined();
      if (_semver2['default'].satisfies(_semver2['default'].major(atom.appVersion) + '.' + _semver2['default'].minor(atom.appVersion) + '.' + _semver2['default'].patch(atom.appVersion), '<1.7.0')) {
        expect(goconfigMain.ready()).toBe(false);
      }
    });

    it('returns the process environment', function () {
      expect(goconfigMain.environment).toBeFalsy();
      expect(goconfigMain.getEnvironment).toBeDefined();
      expect(goconfigMain.getEnvironment()).toBeTruthy();
      expect(goconfigMain.getEnvironment()).toBe(process.env);
    });

    it('consumes an environment', function () {
      expect(goconfigMain.environment).toBeFalsy();
      goconfigMain.consumeEnvironment({ PING: 'PONG' });
      expect(goconfigMain.environment).toBeTruthy();
      expect(goconfigMain.environment.PING).toBe('PONG');
      expect(goconfigMain.environment.PONG).not.toBeDefined();
    });
  });
});
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/james/.atom/packages/go-config/spec/main-spec.js
